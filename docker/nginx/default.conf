# Custom log format to show Authorization header
log_format debug_format '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" "$http_user_agent" '
                        'AUTH:"$http_authorization" ORIGIN:"$http_origin"';

server {
    listen 80;
    server_name localhost;
    root /var/www/html/public;

    # Handle SSE requests with special configuration
    location /api/sse/ {
        try_files $uri /index.php$is_args$args;
        
        # SSE-specific headers
        proxy_buffering off;
        proxy_cache off;
        proxy_set_header Connection '';
        proxy_http_version 1.1;
        chunked_transfer_encoding off;
        
        # Prevent timeout for long-running SSE connections
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        fastcgi_read_timeout 3600s;
        fastcgi_send_timeout 3600s;
    }

    # Handle API requests (Symfony backend)
    location /api/ {
        # CORS headers for cross-network requests - fixed credential/origin conflict
        add_header 'Access-Control-Allow-Origin' '$http_origin' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With, Accept, Origin' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        # Debug: Add header to show what we received
        add_header 'X-Debug-Auth-Received' '$http_authorization' always;
        add_header 'X-Debug-Origin-Received' '$http_origin' always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '$http_origin' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With, Accept, Origin' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Content-Length' 0;
            add_header 'Content-Type' 'text/plain';
            return 204;
        }
        
        try_files $uri /index.php$is_args$args;
    }

    # Handle Symfony routes
    location ~ ^/index\.php(/|$) {
        fastcgi_pass php:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Ensure Authorization header is passed to PHP
        fastcgi_param HTTP_AUTHORIZATION $http_authorization;
        internal;
    }

    # Serve static assets (CSS, JS, images) from shared volume
    location /build/ {
        alias /shared/build-assets/;
        try_files $uri =404;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Serve main application routes through Symfony
    location / {
        try_files $uri /index.php$is_args$args;
    }

    location ~ \.php$ {
        return 404;
    }

    error_log /var/log/nginx/project_error.log;
    access_log /var/log/nginx/project_access.log debug_format;
}
